// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ClientApp.djinni

#include "NativeClientChannelHandler.hpp"  // my header
#include "Marshal.hpp"
#include "NativeChannel.hpp"
#include "NativeChannelRequestErrorId.hpp"

namespace djinni_generated {

NativeClientChannelHandler::NativeClientChannelHandler() : ::djinni::JniInterface<::clientsdk::ClientChannelHandler, NativeClientChannelHandler>() {}

NativeClientChannelHandler::~NativeClientChannelHandler() = default;

NativeClientChannelHandler::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeClientChannelHandler::JavaProxy::~JavaProxy() = default;

void NativeClientChannelHandler::JavaProxy::onChannelConfirmed(const std::string & c_clientId, const std::shared_ptr<::clientsdk::Channel> & c_channel) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeClientChannelHandler>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onChannelConfirmed,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_clientId)),
                           ::djinni::get(::djinni_generated::NativeChannel::fromCpp(jniEnv, c_channel)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeClientChannelHandler::JavaProxy::onChannelResponseError(const std::string & c_clientId, ::clientsdk::ChannelRequestErrorId c_errorId) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeClientChannelHandler>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onChannelResponseError,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_clientId)),
                           ::djinni::get(::djinni_generated::NativeChannelRequestErrorId::fromCpp(jniEnv, c_errorId)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
