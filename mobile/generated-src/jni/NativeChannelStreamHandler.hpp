// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from Channel.djinni

#pragma once

#include "ChannelStreamHandler.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeChannelStreamHandler final : ::djinni::JniInterface<::clientsdk::ChannelStreamHandler, NativeChannelStreamHandler> {
public:
    using CppType = std::shared_ptr<::clientsdk::ChannelStreamHandler>;
    using CppOptType = std::shared_ptr<::clientsdk::ChannelStreamHandler>;
    using JniType = jobject;

    using Boxed = NativeChannelStreamHandler;

    ~NativeChannelStreamHandler();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeChannelStreamHandler>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeChannelStreamHandler>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeChannelStreamHandler();
    friend ::djinni::JniClass<NativeChannelStreamHandler>;
    friend ::djinni::JniInterface<::clientsdk::ChannelStreamHandler, NativeChannelStreamHandler>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::clientsdk::ChannelStreamHandler
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onStreamCreated(const std::string & channelId, const std::string & streamId) override;
        void onStreamError(const std::string & channelId, ::clientsdk::VideoStreamErrorId errorId) override;

    private:
        friend ::djinni::JniInterface<::clientsdk::ChannelStreamHandler, ::djinni_generated::NativeChannelStreamHandler>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/peerstream/psp/sdk/bridge/ChannelStreamHandler") };
    const jmethodID method_onStreamCreated { ::djinni::jniGetMethodID(clazz.get(), "onStreamCreated", "(Ljava/lang/String;Ljava/lang/String;)V") };
    const jmethodID method_onStreamError { ::djinni::jniGetMethodID(clazz.get(), "onStreamError", "(Ljava/lang/String;Lcom/peerstream/psp/sdk/bridge/VideoStreamErrorId;)V") };
};

}  // namespace djinni_generated
