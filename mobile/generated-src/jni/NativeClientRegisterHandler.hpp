// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ClientApp.djinni

#pragma once

#include "ClientRegisterHandler.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeClientRegisterHandler final : ::djinni::JniInterface<::clientsdk::ClientRegisterHandler, NativeClientRegisterHandler> {
public:
    using CppType = std::shared_ptr<::clientsdk::ClientRegisterHandler>;
    using CppOptType = std::shared_ptr<::clientsdk::ClientRegisterHandler>;
    using JniType = jobject;

    using Boxed = NativeClientRegisterHandler;

    ~NativeClientRegisterHandler();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeClientRegisterHandler>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeClientRegisterHandler>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeClientRegisterHandler();
    friend ::djinni::JniClass<NativeClientRegisterHandler>;
    friend ::djinni::JniInterface<::clientsdk::ClientRegisterHandler, NativeClientRegisterHandler>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::clientsdk::ClientRegisterHandler
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onRegisterSuccess(const std::string & clientId, const ::clientsdk::ClientRegistrationData & userData) override;
        void onRegisterFailure(const std::string & clientId, ::clientsdk::ClientRegisterFailureCode code) override;

    private:
        friend ::djinni::JniInterface<::clientsdk::ClientRegisterHandler, ::djinni_generated::NativeClientRegisterHandler>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/peerstream/psp/sdk/bridge/ClientRegisterHandler") };
    const jmethodID method_onRegisterSuccess { ::djinni::jniGetMethodID(clazz.get(), "onRegisterSuccess", "(Ljava/lang/String;Lcom/peerstream/psp/sdk/bridge/ClientRegistrationData;)V") };
    const jmethodID method_onRegisterFailure { ::djinni::jniGetMethodID(clazz.get(), "onRegisterFailure", "(Ljava/lang/String;Lcom/peerstream/psp/sdk/bridge/ClientRegisterFailureCode;)V") };
};

}  // namespace djinni_generated
