// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from VideoStreamer.djinni

#include "NativeVideoStreamRequestHandler.hpp"  // my header
#include "Marshal.hpp"
#include "NativeVideoStreamErrorId.hpp"

namespace djinni_generated {

NativeVideoStreamRequestHandler::NativeVideoStreamRequestHandler() : ::djinni::JniInterface<::clientsdk::VideoStreamRequestHandler, NativeVideoStreamRequestHandler>() {}

NativeVideoStreamRequestHandler::~NativeVideoStreamRequestHandler() = default;

NativeVideoStreamRequestHandler::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeVideoStreamRequestHandler::JavaProxy::~JavaProxy() = default;

void NativeVideoStreamRequestHandler::JavaProxy::onVideoStreamStarted(const std::string & c_streamId) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeVideoStreamRequestHandler>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onVideoStreamStarted,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_streamId)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeVideoStreamRequestHandler::JavaProxy::onVideoStreamError(::clientsdk::VideoStreamErrorId c_errorId) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeVideoStreamRequestHandler>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onVideoStreamError,
                           ::djinni::get(::djinni_generated::NativeVideoStreamErrorId::fromCpp(jniEnv, c_errorId)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
