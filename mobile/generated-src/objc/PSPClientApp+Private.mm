// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ClientApp.djinni

#import "PSPClientApp+Private.h"
#import "PSPClientApp.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "PSPClientAppConfig+Private.h"
#import "PSPClientAppObserver+Private.h"
#import "PSPClientChannelHandler+Private.h"
#import "PSPClientChannelSecurity+Private.h"
#import "PSPClientLogLevel+Private.h"
#import "PSPClientLoginHandler+Private.h"
#import "PSPClientRegisterHandler+Private.h"
#import "PSPClientRegistrationData+Private.h"
#import "PSPVideoStreamer+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface PSPClientApp ()

- (id)initWithCpp:(const std::shared_ptr<::clientsdk::ClientApp>&)cppRef;

@end

@implementation PSPClientApp {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::clientsdk::ClientApp>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::clientsdk::ClientApp>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable PSPClientApp *)create:(nonnull PSPClientAppConfig *)config
                         observer:(nullable id<PSPClientAppObserver>)observer {
    try {
        auto objcpp_result_ = ::clientsdk::ClientApp::create(::djinni_generated::ClientAppConfig::toCpp(config),
                                                             ::djinni_generated::ClientAppObserver::toCpp(observer));
        return ::djinni_generated::ClientApp::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)start {
    try {
        _cppRefHandle.get()->start();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)stop {
    try {
        _cppRefHandle.get()->stop();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setMinLogLevel:(PSPClientLogLevel)level {
    try {
        _cppRefHandle.get()->setMinLogLevel(::djinni::Enum<::clientsdk::ClientLogLevel, PSPClientLogLevel>::toCpp(level));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)registerUser:(nullable id<PSPClientRegisterHandler>)handler {
    try {
        _cppRefHandle.get()->registerUser(::djinni_generated::ClientRegisterHandler::toCpp(handler));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)login:(nonnull PSPClientRegistrationData *)userData
      handler:(nullable id<PSPClientLoginHandler>)handler {
    try {
        _cppRefHandle.get()->login(::djinni_generated::ClientRegistrationData::toCpp(userData),
                                   ::djinni_generated::ClientLoginHandler::toCpp(handler));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)getIdentity {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getIdentity();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable PSPVideoStreamer *)getVideoStreamer {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getVideoStreamer();
        return ::djinni_generated::VideoStreamer::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)createChannel:(nonnull NSString *)userId
             security:(PSPClientChannelSecurity)security
              handler:(nullable id<PSPClientChannelHandler>)handler {
    try {
        _cppRefHandle.get()->createChannel(::djinni::String::toCpp(userId),
                                           ::djinni::Enum<::clientsdk::ClientChannelSecurity, PSPClientChannelSecurity>::toCpp(security),
                                           ::djinni_generated::ClientChannelHandler::toCpp(handler));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)confirmChannel:(nonnull NSString *)userId
              security:(PSPClientChannelSecurity)security
               handler:(nullable id<PSPClientChannelHandler>)handler {
    try {
        _cppRefHandle.get()->confirmChannel(::djinni::String::toCpp(userId),
                                            ::djinni::Enum<::clientsdk::ClientChannelSecurity, PSPClientChannelSecurity>::toCpp(security),
                                            ::djinni_generated::ClientChannelHandler::toCpp(handler));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)denyChannel:(nonnull NSString *)userId {
    try {
        _cppRefHandle.get()->denyChannel(::djinni::String::toCpp(userId));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)registerUserPresenceChange:(nonnull NSString *)userId {
    try {
        _cppRefHandle.get()->registerUserPresenceChange(::djinni::String::toCpp(userId));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)unregisterUserPresenceChange:(nonnull NSString *)userId {
    try {
        _cppRefHandle.get()->unregisterUserPresenceChange(::djinni::String::toCpp(userId));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto ClientApp::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto ClientApp::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<PSPClientApp>(cpp);
}

}  // namespace djinni_generated

@end
