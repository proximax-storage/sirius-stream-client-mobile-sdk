// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ClientApp.djinni

#import "PSPClientAppObserver+Private.h"
#import "PSPClientAppObserver.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "PSPClientAppExitCode+Private.h"
#import "PSPClientNetworkStatus+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class ClientAppObserver::ObjcProxy final
: public ::clientsdk::ClientAppObserver
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::ClientAppObserver;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void onApplicationReady(const std::string & c_clientId) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onApplicationReady:(::djinni::String::fromCpp(c_clientId))];
        }
    }
    void onApplicationExit(::clientsdk::ClientAppExitCode c_code) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onApplicationExit:(::djinni::Enum<::clientsdk::ClientAppExitCode, PSPClientAppExitCode>::fromCpp(c_code))];
        }
    }
    void onChannelRequested(const std::string & c_clientId, const std::string & c_userId) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onChannelRequested:(::djinni::String::fromCpp(c_clientId))
                                                                  userId:(::djinni::String::fromCpp(c_userId))];
        }
    }
    void onNetworkStatus(const std::string & c_clientId, const ::clientsdk::ClientNetworkStatus & c_status) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onNetworkStatus:(::djinni::String::fromCpp(c_clientId))
                                                               status:(::djinni_generated::ClientNetworkStatus::fromCpp(c_status))];
        }
    }
    void onUserPresenceChange(const std::string & c_clientId, const std::string & c_userId, bool c_isActive) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onUserPresenceChange:(::djinni::String::fromCpp(c_clientId))
                                                                    userId:(::djinni::String::fromCpp(c_userId))
                                                                  isActive:(::djinni::Bool::fromCpp(c_isActive))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto ClientAppObserver::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto ClientAppObserver::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
