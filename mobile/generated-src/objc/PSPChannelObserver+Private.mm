// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from Channel.djinni

#import "PSPChannelObserver+Private.h"
#import "PSPChannelObserver.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "PSPChannelErrorId+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class ChannelObserver::ObjcProxy final
: public ::clientsdk::ChannelObserver
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::ChannelObserver;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void onStreamRequested(const std::string & c_channelId) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onStreamRequested:(::djinni::String::fromCpp(c_channelId))];
        }
    }
    void onStreamShared(const std::string & c_channelId, const std::string & c_streamId) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onStreamShared:(::djinni::String::fromCpp(c_channelId))
                                                            streamId:(::djinni::String::fromCpp(c_streamId))];
        }
    }
    void onRawReceived(const std::string & c_channelId, const std::vector<uint8_t> & c_data) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onRawReceived:(::djinni::String::fromCpp(c_channelId))
                                                               data:(::djinni::Binary::fromCpp(c_data))];
        }
    }
    void onMessageReceived(const std::string & c_channelId, const std::string & c_msg) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onMessageReceived:(::djinni::String::fromCpp(c_channelId))
                                                                    msg:(::djinni::String::fromCpp(c_msg))];
        }
    }
    void onChannelError(const std::string & c_channelId, ::clientsdk::ChannelErrorId c_errorId) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onChannelError:(::djinni::String::fromCpp(c_channelId))
                                                             errorId:(::djinni::Enum<::clientsdk::ChannelErrorId, PSPChannelErrorId>::fromCpp(c_errorId))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto ChannelObserver::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto ChannelObserver::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
