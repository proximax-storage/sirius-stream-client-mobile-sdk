// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from Channel.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <optional>
#include <string>
#include <vector>

namespace clientsdk {

class ChannelObserver;
class ChannelStreamHandler;

class Channel {
public:
    virtual ~Channel() {}

    virtual void setObserver(const std::shared_ptr<ChannelObserver> & observer) = 0;

    virtual void sendRawData(const std::vector<uint8_t> & data) = 0;

    virtual void sendMessage(const std::string & msg) = 0;

    virtual void close() = 0;

    virtual void shareStream(const std::shared_ptr<ChannelStreamHandler> & handler) = 0;

    virtual void requestStream(const std::shared_ptr<ChannelStreamHandler> & handler) = 0;

    virtual void confirmVideoStreamRequest(const std::shared_ptr<ChannelStreamHandler> & handler) = 0;

    virtual void denyVideoStreamRequest() = 0;

    virtual void confirmVideoStreamShare(const std::shared_ptr<ChannelStreamHandler> & handler) = 0;

    virtual void denyVideoStreamShare() = 0;

    virtual void stopViewingStream() = 0;

    virtual bool isConfirmed() = 0;

    virtual std::string getIdentity() = 0;
};

}  // namespace clientsdk
