// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from VideoStreamer.djinni

#include "NativeVideoStreamCapability.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeVideoStreamCapability::NativeVideoStreamCapability() = default;

NativeVideoStreamCapability::~NativeVideoStreamCapability() = default;

auto NativeVideoStreamCapability::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeVideoStreamCapability>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.width)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.height)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.maxFPS)),
                                                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c.isInterlaced)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeVideoStreamCapability::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeVideoStreamCapability>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mWidth)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mHeight)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mMaxFPS)),
            ::djinni::Bool::toCpp(jniEnv, jniEnv->GetBooleanField(j, data.field_mIsInterlaced))};
}

}  // namespace djinni_generated
