// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ClientApp.djinni

#pragma once

#include "ClientLoginHandler.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeClientLoginHandler final : ::djinni::JniInterface<::clientsdk::ClientLoginHandler, NativeClientLoginHandler> {
public:
    using CppType = std::shared_ptr<::clientsdk::ClientLoginHandler>;
    using CppOptType = std::shared_ptr<::clientsdk::ClientLoginHandler>;
    using JniType = jobject;

    using Boxed = NativeClientLoginHandler;

    ~NativeClientLoginHandler();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeClientLoginHandler>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeClientLoginHandler>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeClientLoginHandler();
    friend ::djinni::JniClass<NativeClientLoginHandler>;
    friend ::djinni::JniInterface<::clientsdk::ClientLoginHandler, NativeClientLoginHandler>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::clientsdk::ClientLoginHandler
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onLoginSuccess(const std::string & clientId, const std::string & response, const std::optional<::clientsdk::ClientRegistrationData> & data) override;
        void onLoginFailure(const std::string & clientId, ::clientsdk::ClientLoginFailureCode code) override;

    private:
        friend ::djinni::JniInterface<::clientsdk::ClientLoginHandler, ::djinni_generated::NativeClientLoginHandler>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/peerstream/psp/sdk/bridge/ClientLoginHandler") };
    const jmethodID method_onLoginSuccess { ::djinni::jniGetMethodID(clazz.get(), "onLoginSuccess", "(Ljava/lang/String;Ljava/lang/String;Lcom/peerstream/psp/sdk/bridge/ClientRegistrationData;)V") };
    const jmethodID method_onLoginFailure { ::djinni::jniGetMethodID(clazz.get(), "onLoginFailure", "(Ljava/lang/String;Lcom/peerstream/psp/sdk/bridge/ClientLoginFailureCode;)V") };
};

}  // namespace djinni_generated
