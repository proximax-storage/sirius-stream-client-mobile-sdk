// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from VideoStreamer.djinni

#pragma once

#include "VideoStreamOptions.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeVideoStreamOptions final {
public:
    using CppType = ::clientsdk::VideoStreamOptions;
    using JniType = jobject;

    using Boxed = NativeVideoStreamOptions;

    ~NativeVideoStreamOptions();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeVideoStreamOptions();
    friend ::djinni::JniClass<NativeVideoStreamOptions>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/peerstream/psp/sdk/bridge/VideoStreamOptions") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(ZIIZIILcom/peerstream/psp/sdk/bridge/VideoFrameOrientation;)V") };
    const jfieldID field_mAudioCaptureEnabled { ::djinni::jniGetFieldID(clazz.get(), "mAudioCaptureEnabled", "Z") };
    const jfieldID field_mInitialSpeakerVolume { ::djinni::jniGetFieldID(clazz.get(), "mInitialSpeakerVolume", "I") };
    const jfieldID field_mInitialMicVolume { ::djinni::jniGetFieldID(clazz.get(), "mInitialMicVolume", "I") };
    const jfieldID field_mVideoCaptureEnabled { ::djinni::jniGetFieldID(clazz.get(), "mVideoCaptureEnabled", "Z") };
    const jfieldID field_mStreamingWidth { ::djinni::jniGetFieldID(clazz.get(), "mStreamingWidth", "I") };
    const jfieldID field_mStreamingHeight { ::djinni::jniGetFieldID(clazz.get(), "mStreamingHeight", "I") };
    const jfieldID field_mOrientation { ::djinni::jniGetFieldID(clazz.get(), "mOrientation", "Lcom/peerstream/psp/sdk/bridge/VideoFrameOrientation;") };
};

}  // namespace djinni_generated
