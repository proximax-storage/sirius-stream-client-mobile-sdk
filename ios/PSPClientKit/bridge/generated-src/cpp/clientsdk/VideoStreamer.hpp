// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from VideoStreamer.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <optional>
#include <string>
#include <vector>

namespace clientsdk {

class VideoStreamBroadcastRetrieverHandler;
class VideoStreamRequestHandler;
class VideoStreamerObserver;
struct VideoStreamCapability;
struct VideoStreamDevice;
struct VideoStreamOptions;

class VideoStreamer {
public:
    virtual ~VideoStreamer() {}

    virtual void initialize(const VideoStreamOptions & options, const std::shared_ptr<VideoStreamerObserver> & observer) = 0;

    virtual void startStreaming(const std::shared_ptr<VideoStreamRequestHandler> & handler) = 0;

    virtual void stopStreaming() = 0;

    virtual void startViewing(const std::string & streamId, const std::shared_ptr<VideoStreamRequestHandler> & handler) = 0;

    virtual void stopViewing(const std::string & streamId) = 0;

    virtual void enableAudioCapture(bool isEnabled) = 0;

    virtual void enableVideoCapture(bool isEnabled) = 0;

    virtual void setMicrophoneVolume(int32_t val) = 0;

    virtual void setSpeakerVolume(int32_t val) = 0;

    virtual void setAudioInputDevice(int32_t index) = 0;

    virtual void setAudioOutputDevice(int32_t index) = 0;

    virtual void setVideoDevice(int32_t index) = 0;

    virtual void setVideoCapability(int32_t index) = 0;

    virtual int32_t selectedAudioInputDevice() = 0;

    virtual int32_t selectedAudioOutputDevice() = 0;

    virtual int32_t selectedVideoDevice() = 0;

    virtual int32_t selectedVideoCapability() = 0;

    virtual std::vector<std::string> getAudioInputDevices() = 0;

    virtual std::vector<std::string> getAudioOutputDevices() = 0;

    virtual std::vector<VideoStreamDevice> getVideoDevices() = 0;

    virtual std::vector<VideoStreamCapability> getVideoCapabilities(int32_t index) = 0;

    virtual void retrieveBroadcastStreamId(const std::shared_ptr<VideoStreamBroadcastRetrieverHandler> & handler) = 0;
};

}  // namespace clientsdk
